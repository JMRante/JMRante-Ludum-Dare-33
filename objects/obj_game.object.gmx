<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set up the view in the room
view_wview[0] = 1920;
view_wport[0] = 1920;
view_hview[0] = 1080;
view_hport[0] = 1080;
view_hborder[0] = 1920/2;
view_vborder[0] = 1080/2;

//Create grid of light data
light = ds_grid_create(32,19);
ds_grid_clear(light, 0.1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Cast light
var i, j, k;

ds_grid_clear(light, 0.1);
    
for (i = 0; i &lt; instance_number(obj_soldier); i++)
{
    s = instance_find(obj_soldier,i);

    with (s)
    {
        lx = floor(x / 64);
        ly = floor(y / 64);
        
        for (j = (lx - lightRadius); j &lt;= (lx + lightRadius); j++)
        {
            for (k = (ly - lightRadius); k &lt;= (ly + lightRadius); k++)
            {
                distToSource = point_distance(x, y, j * 64, k * 64);
            
                if (!collision_line(x, y, j * 64, k * 64, obj_wall, 0, 0) &amp;&amp; j &gt;= 0 &amp;&amp; j &lt;= 31 &amp;&amp; k &gt;= 0 &amp;&amp; k &lt;= 18
                    &amp;&amp; distToSource &lt;= (lightRadius * 64))
                {
                    ds_grid_add(obj_game.light, j, k, min((((lightRadius * 64) - distToSource) / (lightRadius * 64)) + 0.1, 1));
                    
                    if (ds_grid_get(obj_game.light, j, k) &gt; 1)
                        ds_grid_set(obj_game.light, j, k, 1);
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw lighting
var i, j;

for (i = -1; i &lt; (ds_grid_width(light) - 1); i++)
{
    for (j = -1; j &lt; (ds_grid_height(light) - 1); j++)
    {
        draw_set_alpha(1 - ds_grid_get(light, i, j));
        draw_sprite(spr_dark, 0, i * 64, j * 64);
    }
}

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
